class Solution {
    public List<Integer> twoOutOfThree(int[] nums1, int[] nums2, int[] nums3) {
        
        Set<Integer> distinct = new LinkedHashSet<>();
        
        for(int i=0;i<nums1.length;i++){
            
            for(int j=0;j<nums2.length;j++){
                if(nums1[i]==nums2[j]){
                   distinct.add(nums1[i]) ;
                }
            }
            
             for(int k=0;k<nums3.length;k++){
                if(nums1[i]==nums3[k]){
                   distinct.add(nums1[i]) ; 
                }
            }
        }
        
        
        for(int i=0;i<nums2.length;i++){
            
            for(int j=0;j<nums1.length;j++){
                if(nums2[i]==nums1[j]){
                   distinct.add(nums2[i]) ;
                }
            }
            
             for(int k=0;k<nums3.length;k++){
                if(nums2[i]==nums3[k]){
                   distinct.add(nums2[i]) ; 
                }
            }
        }
        
        
          for(int i=0;i<nums3.length;i++){
            
            for(int j=0;j<nums1.length;j++){
                if(nums3[i]==nums1[j]){
                   distinct.add(nums3[i]) ;
                }
            }
            
             for(int k=0;k<nums2.length;k++){
                if(nums3[i]==nums2[k]){
                   distinct.add(nums3[i]) ; 
                }
            }
        }
        
        
        
        
        return new ArrayList<>(distinct);
    }
}
